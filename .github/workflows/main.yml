name: Foodgram workflow

on: [push]

jobs:
  tests:
    name: Tests running
    runs-on: ubuntu-latest
  
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r backend/requirements.txt

    - name: Test with flake8 and django tests
      run: |
        python -m flake8
  
  build_and_push_to_docker_hub:
    name: Push Backend image to Docker Hub
    runs-on: ubuntu-20.04
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.LOGIN_DOCKER_HUB }}
          password: ${{ secrets.PASSWORD_DOCKER_HUB }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          push: true
          context: ./backend/
          tags: ${{ secrets.LOGIN_DOCKER_HUB }}/backend:latest

  build_and_push_frontend:
    name: Push Frontend image to Docker Hub
    runs-on: ubuntu-20.04
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Build Docker image
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker 
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.LOGIN_DOCKER_HUB }}
          password: ${{ secrets.PASSWORD_DOCKER_HUB }}

      - name: Push 2 Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: True
          context: ./frontend/
          tags: ${{ secrets.LOGIN_DOCKER_HUB }}/frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: 
      - build_and_push_to_docker_hub
      - build_and_push_frontend
    if: github.ref == 'refs/heads/master'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.VM_PASSPHRASE }}
          script: |
            sudo docker-compose stop
            sudo docker-compose rm backend
            sudo docker-compose rm frontend
            sudo docker pull vasilisa817/backend:latest
            sudo docker pull vasilisa817/frontend:latest
            touch .env
            echo DB_ENGINE=${{ secrets.ENGINE }} >> .env
            echo DB_NAME=${{ secrets.NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.HOST }} >> .env
            echo DB_PORT=${{ secrets.PORT }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            sudo docker image prune -f
            sudo docker-compose up -d
            sudo docker-compose exec -T backend python manage.py makemigrations users
            sudo docker-compose exec -T backend python manage.py makemigrations recipes
            sudo docker-compose exec -T backend python manage.py collectstatic --noinput
            sudo docker-compose exec backend python manage.py migrate
